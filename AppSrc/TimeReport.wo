// TimeReport.wo
// TimeReport
Use cWebBusinessProcess.pkg
Use cWebReport.pkg

Use cCompanyDataDictionary.dd
Use CUSTOMER.DD
Use cProjectDataDictionary.dd
Use User.DD
Use cTimeregDataDictionary.dd

Object oTimeReport Is A cWebBusinessProcess
    Set psDescription to "....vvTimeReport"


    Object oCompany_DD Is A cCompanyDataDictionary
        Send DefineAllExtendedFields
    End_Object // oCompany_DD

    Object oCustomer_DD Is A Customer_DataDictionary
        Send DefineAllExtendedFields
//        Set DDO_Server To oCompany_DD
        Property String psStartName
        Property String psStopName

        Procedure OnConstrain 
            String sStart sStop
//            Constrain customer.CompanyId eq session.CompanyId

            Get psStartName to sStart
            Get psStopName to sStop

//            If (sStart <> "" And sStop <> "") Begin
                Constrain Customer.NAME Between sStart and sStop
//            End
//            Else Begin
//                If (sStart <> "") Begin
//                    Constrain Customer.Name Ge sStart
//                End
//                Else Begin
//                    If (sStop <> "") Begin
//                        Constrain Customer.Name Le sStop
//                    End
//                End
//            End
        End_Procedure // OnConstrain
    End_Object // oCustomer_DD

    Object oProject_DD Is A cProjectDataDictionary
        Send DefineAllExtendedFields
        Set DDO_Server To oCustomer_DD
        Property String psStartID
        Property String psStopID

        Procedure OnConstrain 
            String sStart sStop
            Get psStartID to sStart
            Get psStopID to sStop

            If (sStart <> 0 and sStop <> 0) Begin
                Constrain Project.ProjectId Between sStart and sStop
            End

//            Else Begin
//                If (sStart <> "") Begin
//                    Constrain Project.Name Ge sStart
//                End
//                Else Begin
//                    If (sStop <> "") Begin
//                        Constrain Project.Name Le sStop
//                    End
//                End
//            End
        End_Procedure // OnConstrain
    End_Object // oProject_DD

    Object oUser_DD Is A User_DataDictionary
        Send DefineAllExtendedFields
        Set DDO_Server To oCompany_DD
        Property String psStartLoginID
        Property String psStopLoginID

        Procedure OnConstrain 
            String sStart sStop
//            Constrain User.UserId eq session.UserId
//
            Get psStartLoginID to sStart
            Get psStopLoginID to sStop
//
//            If (sStart <> "" And sStop <> "") Begin
                Constrain User.UserId Between sStart and sStop
//            End
//            Else Begin
//                If (sStart <> "") Begin
//                    Constrain User.Loginname Ge sStart
//                End
//                Else Begin
//                    If (sStop <> "") Begin
//                        Constrain User.Loginname Le sStop
//                    End
//                End
//            End
        End_Procedure // OnConstrain
    End_Object // oUser_DD

    Object oTimereg_DD Is A cTimeregDataDictionary
        Set DDO_Server To oProject_DD
        Send DefineAllExtendedFields
        Set DDO_Server To oUser_DD
        Property Date pdStartstart_date
        Property Date pdStopstart_date
        Property String psStartstart_time
        Property String psStopstart_time
        Property Date pdStartend_date
        Property Date pdStopend_date
        Property String psStartend_time
        Property String psStopend_time

        Procedure OnConstrain 
            Date dStart dStop
            String sStart sStop

            Get pdStartstart_date to dStart
            Get pdStopstart_date to dStop
//            If (dStart <> 0 and dStop <> 0) Begin
                Constrain Timereg.Start_Date Between dStart and dStop
//            End
//            Else Begin
//                If (dStart <> 0) Begin
//                    Constrain Timereg.Start_Date Ge dStart
//                End
//                Else Begin
//                    If (dStop <> 0) Begin
//                        Constrain Timereg.Start_Date Le dStop
//                    End
//                End
//            End
//
//            Get psStartstart_time To sStart
//            Get psStopstart_time To sStop
//
//            If (sStart <> "" And sStop <> "") Begin
//                Constrain Timereg.Start_Time Between sStart And sStop
//            End
//            Else Begin
//                If (sStart <> "") Begin
//                    Constrain Timereg.Start_Time Ge sStart
//                End
//                Else Begin
//                    If (sStop <> "") Begin
//                        Constrain Timereg.Start_Time Le sStop
//                    End
//                End
//            End
//
//            Get pdStartend_date To dStart
//            Get pdStopend_date To dStop
//
//            If (dStart <> 0 And dStop <> 0) Begin
//                Constrain Timereg.End_Date Between dStart And dStop
//            End
//            Else Begin
//                If (dStart <> 0) Begin
//                    Constrain Timereg.End_Date Ge dStart
//                End
//                Else Begin
//                    If (dStop <> 0) Begin
//                        Constrain Timereg.End_Date Le dStop
//                    End
//                End
//            End
//
//            Get psStartend_time To sStart
//            Get psStopend_time To sStop
//
//            If (sStart <> "" And sStop <> "") Begin
//                Constrain Timereg.End_Time Between sStart And sStop
//            End
//            Else Begin
//                If (sStart <> "") Begin
//                    Constrain Timereg.End_Time Ge sStart
//                End
//                Else Begin
//                    If (sStop <> "") Begin
//                        Constrain Timereg.End_Time Le sStop
//                    End
//                End
//            End
        End_Procedure // OnConstrain
    End_Object // oTimereg_DD

    Set Main_DD To oTimereg_DD


    Object oReport is a cWebReport
        Property Integer piTotalMinutes 
        Property Integer piTotalHours
        
//        Procedure OnPageTop 
//            Send WriteHtmlTableBegin 'border="2" width="99%" class="ReportTable"'
//
//            Send WriteHtmlRowBegin
//                Send WriteHtmlCellHeader 'Customer Name' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'Name' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'Loginname' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'Start Date' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'Start Time' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'End Date' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'End Time' 'class="Header" align="left"'
//            Send WriteHtmlRowEnd
//        End_Procedure // OnPageTop

        Function Break1 Returns String
            RowID  riRec
            String sRec
            Move (GetRowId(Project.File_number)) to riRec
            Move (SerializeRowId(riRec)) to sRec
            Function_Return sRec //  Break every time the parent record changes
        End_Function // Break1

        Procedure OnInitBreakpoints 
            Send RegisterBreakpoint Get_Break1
        End_Procedure // OnInitBreakpoints

        Procedure OnPageTop
            String sCustomerCustomerid
            String sCustomerName
            String sProjectName
            String sUserLoginname
            Set piTotalHours to 0
             

            Get ddValueEncode "Customer.Name" to sCustomerName
//            Get ddValueEncode "Customer.Customerid" to sCustomerCustomerid
            Get ddValueEncode "Project.Name" to sProjectName
            Get ddValueEncode "User.Loginname" to sUserLoginname
       
            Send WriteHtmlTableBegin 'border="0" width="50%" class="ReportHdr1Table"'

            Send WriteHtmlRowBegin
                Send WriteHtmlCellHeader 'Customer Name' 'class="Label"'
                Send WriteHtmlCell sCustomerName 'class="Data"'
            Send WriteHtmlRowEnd
            Send WriteHtmlRowBegin
                Send WriteHtmlCellHeader 'Loginname' 'class="Label"'
                Send WriteHtmlCell sUserLoginname 'class="Data"'
            Send WriteHtmlRowEnd

            Send WriteHtmlTableEnd



        End_Procedure
        
        Procedure OnSubHeader1 
            String sCustomerCustomerid
            String sCustomerName
            String sProjectName
            String sUserLoginname
            Set piTotalMinutes to 0

            Get ddValueEncode "Customer.Name" to sCustomerName
//            Get ddValueEncode "Customer.Customerid" to sCustomerCustomerid
            Get ddValueEncode "Project.Name" to sProjectName
            Get ddValueEncode "User.Loginname" to sUserLoginname

            Send WriteHtmlTableBegin 'border="0" width="200" class="ReportHdr1Table"'

//            Send WriteHtmlRowBegin
//                Send WriteHtmlCellHeader 'Customer Name' 'class="Label"'
//                Send WriteHtmlCell sCustomerName 'class="Data"'
//            Send WriteHtmlRowEnd
            Send WriteHtmlRowBegin
                Send WriteHtmlCellHeader 'Projekt' 'class="Label"'
                Send WriteHtmlCell sProjectName 'class="Data"'
            Send WriteHtmlRowEnd
//            Send WriteHtmlRowBegin
//                Send WriteHtmlCellHeader 'Loginname' 'class="Label"'
//                Send WriteHtmlCell sUserLoginname 'class="Data"'
//            Send WriteHtmlRowEnd

            Send WriteHtmlTableEnd

            Send WriteHtmlTableBegin 'border="0" width="99%" class="ReportTable"'

            Send WriteHtmlRowBegin
//                Send WriteHtmlCellHeader 'Projectid' 'class="Header" align="right"'
                Send WriteHtmlCellHeader 'Start Date' 'class="Header" align="left"'
                Send WriteHtmlCellHeader 'Comments' 'class="Header" align="left"'
                Send WriteHtmlCellHeader 'Start' 'class="Header" align="left"'
//                Send WriteHtmlCellHeader 'End Date' 'class="Header" align="left"'
                Send WriteHtmlCellHeader 'End' 'class="Header" align="left"'
                Send WriteHtmlCellHeader 'Time' 'class="Header" align="left"'
            Send WriteHtmlRowEnd
        End_Procedure // OnSubHeader1


        Procedure OnBody 
            String sText, sComments
            String sCustomerName
            String sProjectName
            String sUserLoginname
            String sTimeregStart_Date
            String sTimeregStart_Time
            String sTimeregEnd_Date
            String sTimeregEnd_Time
            String sRet zeroH zeroM sTimeregTime
            Integer iHours iMinutes iStartMinutes iEndMinutes iTotalMinutes iSubtotal1
            Get AddRowIdLink (Timereg.Start_Date) to sText   
            Get ddValueEncode "Timereg.Comments" to sComments 
            Get ddValueEncode "Timereg.Start_Time" to sTimeregStart_Time
            Get ddValueEncode "Timereg.End_Time" To sTimeregEnd_Time

            Move (mid(sTimeregStart_Time, 2, 1)) to iHours
            Move (mid(sTimeregStart_Time, 2, 4)) to iMinutes
            Move ((60*iHours)+iMinutes) to iStartMinutes
            Move (mid(sTimeregEnd_Time, 2, 1)) to iHours
            Move (mid(sTimeregEnd_Time, 2, 4)) to iMinutes
            Move ((60*iHours)+iMinutes) to iEndMinutes
            Move (iEndMinutes-iStartMinutes+iTotalMinutes) to iTotalMinutes
            Get piTotalMinutes to iSubtotal1
            Move (iSubtotal1+iTotalMinutes) to iSubtotal1
            Set piTotalMinutes to iSubtotal1
            Move (iTotalMinutes/60) to iHours
            Move (iTotalMinutes-(iHours*60)) to iMinutes
            Move "" to zeroH
            Move "" to zeroM
            If (iHours < 10) Move "0" to zeroH
            If (iMinutes < 10) Move "0" to zeroM
            Move (zeroH - String(iHours) - ':' - zeroM - String(iMinutes)) to sTimeregTime
            Send WriteHtmlRowBegin
            Send WriteHtmlCell sText 'class="Data" align="left"'
            Send WriteHtmlCell sComments 'class="Data" align="left"'
            Send WriteHtmlCell sTimeregStart_Time 'class="Data" align="left"'
            Send WriteHtmlCell sTimeregEnd_Time 'class="Data" align="left"'
            Send WriteHtmlCell sTimeregTime 'class="Data" align="left"'
            Send WriteHtmlRowEnd
        End_Procedure // OnBody



        Procedure OnSubTotal1 
            Integer iSubtotal1 iHours iMinutes
            Get piTotalMinutes to iSubtotal1
            String zeroH zeroM sTimeregTime
            Move (iSubTotal1/60) to iHours
            Move (iSubtotal1-(iHours*60)) to iMinutes
            Move "" to zeroH
            Move "" to zeroM
            If (iHours < 10) Move "0" to zeroH
            If (iMinutes < 10) Move "0" to zeroM
            Move (zeroH - String(iHours) - ':' - zeroM - String(iMinutes)) to sTimeregTime
            Send WriteHtmlCell "" 'class="Header" align="left"'
            Send WriteHtmlCell "" 'class="Header" align="left"'
            Send WriteHtmlCell "" 'class="Header" align="left"'
            Send WriteHtmlCell "" 'class="Header" align="left"'
            Send WriteHtmlCell sTimeregTime 'class="Header" Style="text-align:left; padding-left:9px;"'
            Send WriteHtmlTableEnd
        End_Procedure // OnSubTotal1

        Procedure OnPageBottom 
            Send WriteHtmlTableEnd
        End_Procedure // OnPageBottom

        Function RunTimeReport Integer iIndex RowId riStartRowId Integer iMaxCount Returns RowId
            RowId   riLastRowId
            Integer eStatus

            Set piOrdering to 3 //iIndex
            Set piMaxCount To iMaxCount
            Set piMaxCountBreakLevel To 0
            Set priStartRowId To riStartRowId

            Get DoRunReport To eStatus

            Get priLastRowId To riLastRowId

            Function_Return riLastRowId
        End_Function // RunTimeReport
    End_Object // oReport

    { Published=True }
    { Description="Name to link for drill down report" }
    Procedure SetHRefName String sName
        Set psHRefname of oReport To sName
    End_Procedure // SetHRefName

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetCustomer_Name String sStart String sStop
        Set psStartName of oCustomer_DD to sStart
        Set psStopName  of oCustomer_DD to sStop
    End_Procedure // SetCustomer_Name

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetProject_ID String sStart String sStop
        Set psStartID of oProject_DD to (Uppercase (sStart))
        Set psStopID  of oProject_DD to (Uppercase (sStop))
    End_Procedure // SetProject_Name

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetUser_LoginID String sStart String sStop
        Set psStartLoginID of oUser_DD to sStart
        Set psStopLoginID  of oUser_DD to sStop
    End_Procedure // SetUser_Loginname

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetTimereg_Start_Date String sStart String sStop
        Set pdStartstart_date of oTimereg_DD To sStart
        Set pdStopstart_date  of oTimereg_DD To sStop
    End_Procedure // SetTimereg_Start_Date

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetTimereg_Start_Time String sStart String sStop
        Set psStartstart_time of oTimereg_DD To (Uppercase (sStart))
        Set psStopstart_time  of oTimereg_DD To (Uppercase (sStop))
    End_Procedure // SetTimereg_Start_Time

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetTimereg_End_Date String sStart String sStop
        Set pdStartend_date of oTimereg_DD To sStart
        Set pdStopend_date  of oTimereg_DD To sStop
    End_Procedure // SetTimereg_End_Date

    { Published=True }
    { Description="Sets the reports selection criteria" }
    Procedure SetTimereg_End_Time String sStart String sStop
        Set psStartend_time of oTimereg_DD To (Uppercase (sStart))
        Set psStopend_time  of oTimereg_DD To (Uppercase (sStop))
    End_Procedure // SetTimereg_End_Time

    { Published=True }
    { Description="Run Report" }
    Function RunTimeReport Integer iIndex String sStartRowId Integer iMaxCount Returns String
        RowId  riStartRowId riEndRowId
        String sEndRowId

        Move (DeserializeRowId(sStartRowId)) to riStartRowId
        Get RunTimeReport of oReport iIndex riStartRowId iMaxCount To riEndRowId
        Move (SerializeRowId(riEndRowId)) to sEndRowId

        Function_Return sEndRowId
    End_Function // RunTimeReport

    Set pbAllowSaveNew To False
    Set pbAllowSaveEdit To False
    Set pbAllowDelete To False

End_Object // oTimeReport
